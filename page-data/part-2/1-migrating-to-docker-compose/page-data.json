{"componentChunkName":"component---src-templates-course-content-template-js","path":"/part-2/1-migrating-to-docker-compose","result":{"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Even with a simple image, we've already been dealing with plenty of command line options in both building, pushing and running the image."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next we will switch to a tool called docker-compose to manage these."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"docker-compose is designed to simplify running multi-container applications to using a single command."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the folder where we have our Dockerfile with the following content:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"dockerfile"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-dockerfile"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-dockerfile"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"FROM"}]},{"type":"text","value":" ubuntu"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"18.04\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"WORKDIR"}]},{"type":"text","value":" /mydir\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"RUN"}]},{"type":"text","value":" apt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"get update\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"RUN"}]},{"type":"text","value":" apt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"get install "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"y curl python\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"RUN"}]},{"type":"text","value":" curl "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"L https"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"//yt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl.org/downloads/latest/youtube"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"o /usr/local/bin/youtube"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"RUN"}]},{"type":"text","value":" chmod a+x /usr/local/bin/youtube"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"ENV"}]},{"type":"text","value":" LC_ALL=C.UTF"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"8\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"ENTRYPOINT"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"/usr/local/bin/youtube-dl\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"we create a file called "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"docker-compose.yml"}]},{"type":"text","value":":"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"version"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'3.8'"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"services"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"youtube-dl-ubuntu"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"image"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" <username"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"/<repositoryname"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"build"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ."}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The version setting is not very strict, it just needs to be above 2 because otherwise the syntax is significantly different. See "},{"type":"element","tagName":"a","properties":{"href":"https://docs.docker.com/compose/compose-file/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"https://docs.docker.com/compose/compose-file/"}]},{"type":"text","value":" for more info. The key "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"build:"}]},{"type":"text","value":" value can be set to a path (ubuntu), have an object with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"context"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dockerfile"}]},{"type":"text","value":" keys or reference a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"url of a git repository"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we can build and push with just these commands:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker-compose build\n$ docker-compose push"}]}]}]},{"type":"element","tagName":"h2","properties":{"id":"volumes-in-docker-compose","style":"position:relative;"},"children":[{"type":"text","value":"Volumes in docker-compose"},{"type":"element","tagName":"a","properties":{"href":"#volumes-in-docker-compose","ariaLabel":"volumes in docker compose permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To run the image as we did previously, we will need to add the volume bind mounts. Volumes in docker-compose are defined with the following syntax "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"location-in-host:location-in-container"}]},{"type":"text","value":". Compose can work without an absolute path:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"version"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'3.8'"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"services"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"youtube-dl-ubuntu"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"image"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" <username"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"/<repositoryname"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"build"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" .\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"volumes"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" ."},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"/mydir\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"container_name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" youtube"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can also give the container a name it will use when running with container_name. And the service name can be used to run it:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker-compose run youtube-dl-ubuntu https://imgur.com/JY5tHqr"}]}]}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 2.1"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Exercises in part 2 should be done using docker-compose"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without a command "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"devopsdockeruh/simple-web-service"}]},{"type":"text","value":" will create logs into its "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/usr/src/app/text.log"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Create a docker-compose.yml file that starts "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"devopsdockeruh/simple-web-service"}]},{"type":"text","value":" and saves the logs into your\nfilesystem."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Submit the docker-compose.yml, make sure that it works simply by running "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"docker-compose up"}]},{"type":"text","value":" if the log file exists."}]}]},{"type":"element","tagName":"h2","properties":{"id":"web-services-in-docker-compose","style":"position:relative;"},"children":[{"type":"text","value":"Web services in docker-compose"},{"type":"element","tagName":"a","properties":{"href":"#web-services-in-docker-compose","ariaLabel":"web services in docker compose permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compose is really meant for running web services, so let's move from simple binary wrappers to running a HTTP service."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/jwilder/whoami","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"https://github.com/jwilder/whoami"}]},{"type":"text","value":" is a simple service that prints the current container id (hostname)."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker container run -d -p 8000:8000 jwilder/whoami\n  736ab83847bb12dddd8b09969433f3a02d64d5b0be48f7a5c59a594e3a6a3541"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Navigate with a browser or curl to localhost:8000, they both will answer with the id."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Take down the container so that it's not blocking port 8000."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker container stop 736ab83847bb\n$ docker container rm 736ab83847bb"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's create a new folder and a docker-compose file "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"whoami/docker-compose.yml"}]},{"type":"text","value":" from the command line options."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"version"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'3.8'"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"services"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"whoami"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"image"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" jwilder/whoami\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"ports"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" 8000"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"8000"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Test it:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker-compose up -d\n$ curl localhost:8000"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Environment variables can also be given to the containers in docker-compose."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"version"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'3.8'"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"services"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"backend"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"image"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"environment"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" VARIABLE=VALUE\n        "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" VARIABLE"}]}]}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 2.2"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Read about how to add command to docker-compose.yml from the "},{"type":"element","tagName":"a","properties":{"href":"https://docs.docker.com/compose/compose-file/compose-file-v3/#command","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"documentation"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The familiar image "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"devopsdockeruh/simple-web-service"}]},{"type":"text","value":" can be used to start a web service."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Create a docker-compose.yml and use it to start the service so that you can use it with your browser."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Submit the docker-compose.yml, make sure that it works simply by running "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"docker-compose up"}]}]}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 2.3"},"children":[{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"b","properties":{"style":"color:firebrick;"},"children":[{"type":"text","value":"This exercise is mandatory"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As we saw previously, starting an application with two programs was not trivial and the commands got a bit long."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous part we created Dockerfiles for both "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/docker-hy/material-applications/tree/main/example-frontend","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"frontend"}]},{"type":"text","value":" and "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/docker-hy/material-applications/tree/main/example-backend","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":".\nNext, simplify the usage into one docker-compose.yml."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Configure the backend and frontend from part 1 to work in docker-compose."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Submit the docker-compose.yml"}]}]}]},"html":"<div><p>Even with a simple image, we've already been dealing with plenty of command line options in both building, pushing and running the image.</p><p>Next we will switch to a tool called docker-compose to manage these.</p><p>docker-compose is designed to simplify running multi-container applications to using a single command.</p><p>In the folder where we have our Dockerfile with the following content:</p><div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> ubuntu<span class=\"token punctuation\">:</span>18.04\n\n<span class=\"token keyword\">WORKDIR</span> /mydir\n\n<span class=\"token keyword\">RUN</span> apt<span class=\"token punctuation\">-</span>get update\n<span class=\"token keyword\">RUN</span> apt<span class=\"token punctuation\">-</span>get install <span class=\"token punctuation\">-</span>y curl python\n<span class=\"token keyword\">RUN</span> curl <span class=\"token punctuation\">-</span>L https<span class=\"token punctuation\">:</span>//yt<span class=\"token punctuation\">-</span>dl.org/downloads/latest/youtube<span class=\"token punctuation\">-</span>dl <span class=\"token punctuation\">-</span>o /usr/local/bin/youtube<span class=\"token punctuation\">-</span>dl\n<span class=\"token keyword\">RUN</span> chmod a+x /usr/local/bin/youtube<span class=\"token punctuation\">-</span>dl\n\n<span class=\"token keyword\">ENV</span> LC_ALL=C.UTF<span class=\"token punctuation\">-</span>8\n\n<span class=\"token keyword\">ENTRYPOINT</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/usr/local/bin/youtube-dl\"</span><span class=\"token punctuation\">]</span></code></pre></div><p>we create a file called <code class=\"language-text\">docker-compose.yml</code>:</p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.8'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">youtube-dl-ubuntu</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> &lt;username<span class=\"token punctuation\">></span>/&lt;repositoryname<span class=\"token punctuation\">></span>\n      <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .</code></pre></div><p>The version setting is not very strict, it just needs to be above 2 because otherwise the syntax is significantly different. See <a href=\"https://docs.docker.com/compose/compose-file/\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.docker.com/compose/compose-file/</a> for more info. The key <code class=\"language-text\">build:</code> value can be set to a path (ubuntu), have an object with <code class=\"language-text\">context</code> and <code class=\"language-text\">dockerfile</code> keys or reference a <code class=\"language-text\">url of a git repository</code>.</p><p>Now we can build and push with just these commands:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker-compose build\n$ docker-compose push</code></pre></div><h2 id=\"volumes-in-docker-compose\" style=\"position:relative;\">Volumes in docker-compose<a href=\"#volumes-in-docker-compose\" aria-label=\"volumes in docker compose permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>To run the image as we did previously, we will need to add the volume bind mounts. Volumes in docker-compose are defined with the following syntax <code class=\"language-text\">location-in-host:location-in-container</code>. Compose can work without an absolute path:</p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.8'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token key atrule\">youtube-dl-ubuntu</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> &lt;username<span class=\"token punctuation\">></span>/&lt;repositoryname<span class=\"token punctuation\">></span>\n      <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> .<span class=\"token punctuation\">:</span>/mydir\n      <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> youtube<span class=\"token punctuation\">-</span>dl</code></pre></div><p>We can also give the container a name it will use when running with container_name. And the service name can be used to run it:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker-compose run youtube-dl-ubuntu https://imgur.com/JY5tHqr</code></pre></div><exercise name=\"Exercise 2.1\"><p><em>Exercises in part 2 should be done using docker-compose</em></p><p>Without a command <code class=\"language-text\">devopsdockeruh/simple-web-service</code> will create logs into its <code class=\"language-text\">/usr/src/app/text.log</code>.</p><p>Create a docker-compose.yml file that starts <code class=\"language-text\">devopsdockeruh/simple-web-service</code> and saves the logs into your\nfilesystem.</p><p>Submit the docker-compose.yml, make sure that it works simply by running <code class=\"language-text\">docker-compose up</code> if the log file exists.</p></exercise><h2 id=\"web-services-in-docker-compose\" style=\"position:relative;\">Web services in docker-compose<a href=\"#web-services-in-docker-compose\" aria-label=\"web services in docker compose permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Compose is really meant for running web services, so let's move from simple binary wrappers to running a HTTP service.</p><p><a href=\"https://github.com/jwilder/whoami\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/jwilder/whoami</a> is a simple service that prints the current container id (hostname).</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container run -d -p 8000:8000 jwilder/whoami\n  736ab83847bb12dddd8b09969433f3a02d64d5b0be48f7a5c59a594e3a6a3541</code></pre></div><p>Navigate with a browser or curl to localhost:8000, they both will answer with the id.</p><p>Take down the container so that it's not blocking port 8000.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container stop 736ab83847bb\n$ docker container rm 736ab83847bb</code></pre></div><p>Let's create a new folder and a docker-compose file <code class=\"language-text\">whoami/docker-compose.yml</code> from the command line options.</p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.8'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">whoami</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> jwilder/whoami\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> 8000<span class=\"token punctuation\">:</span><span class=\"token number\">8000</span></code></pre></div><p>Test it:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker-compose up -d\n$ curl localhost:8000</code></pre></div><p>Environment variables can also be given to the containers in docker-compose.</p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.8'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> VARIABLE=VALUE\n        <span class=\"token punctuation\">-</span> VARIABLE</code></pre></div><exercise name=\"Exercise 2.2\"><p>Read about how to add command to docker-compose.yml from the <a href=\"https://docs.docker.com/compose/compose-file/compose-file-v3/#command\" target=\"_blank\" rel=\"noopener noreferrer\">documentation</a>.</p><p>The familiar image <code class=\"language-text\">devopsdockeruh/simple-web-service</code> can be used to start a web service.</p><p>Create a docker-compose.yml and use it to start the service so that you can use it with your browser.</p><p>Submit the docker-compose.yml, make sure that it works simply by running <code class=\"language-text\">docker-compose up</code></p></exercise><exercise name=\"Exercise 2.3\"><div><b style=\"color:firebrick;\">This exercise is mandatory</b></div><p>As we saw previously, starting an application with two programs was not trivial and the commands got a bit long.</p><p>In the previous part we created Dockerfiles for both <a href=\"https://github.com/docker-hy/material-applications/tree/main/example-frontend\" target=\"_blank\" rel=\"noopener noreferrer\">frontend</a> and <a href=\"https://github.com/docker-hy/material-applications/tree/main/example-backend\" target=\"_blank\" rel=\"noopener noreferrer\">backend</a>.\nNext, simplify the usage into one docker-compose.yml.</p><p>Configure the backend and frontend from part 1 to work in docker-compose.</p><p>Submit the docker-compose.yml</p></exercise></div>","frontmatter":{"path":"/part-2/1-migrating-to-docker-compose","title":"Migrating to docker compose"},"fileAbsolutePath":"/home/runner/work/github-actions/github-actions/data/part-2/section-1.md"},"allPages":{"edges":[{"node":{"id":"0bef8eef-de93-5202-8af6-02b5fe6ec755","frontmatter":{"path":"/faq","title":"Frequently asked questions"}}},{"node":{"id":"41156626-bde8-5a7c-ac92-ec312076480a","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"37487c30-534e-506d-883c-b01a30949500","frontmatter":{"path":"/getting-started","title":"Getting started"}}},{"node":{"id":"77678795-397b-583f-bc6b-dc8c20f6525e","frontmatter":{"path":"/","title":"About this course"}}},{"node":{"id":"67c531a3-28aa-559a-8475-f768021829f2","frontmatter":{"path":"/links","title":"Links"}}},{"node":{"id":"2df82908-2caf-5bdd-bf0c-8113de55000a","frontmatter":{"path":"/part-1","title":"Part 1"}}},{"node":{"id":"1d814ff0-9cd5-5a92-b1fc-b3009eb70d9a","frontmatter":{"path":"/part-1/2-running-and-stopping","title":"Running and stopping containers"}}},{"node":{"id":"bff7ba6f-db2c-57b8-9bc7-a7b6f0b0ae86","frontmatter":{"path":"/part-1/3-in-depth-dive-to-images","title":"In-depth dive to images"}}},{"node":{"id":"596768d5-0f2e-5931-a5ad-36213dde53b9","frontmatter":{"path":"/part-1/4-defining-start-conditions","title":"Defining start conditions for the container"}}},{"node":{"id":"4bbdd8da-2aa2-5fad-b1d8-c16e6721792a","frontmatter":{"path":"/part-1/5-volumes-and-ports","title":"Interacting with the container via volumes and ports"}}},{"node":{"id":"a828a58c-1e1e-57c7-b755-fdff4b7055be","frontmatter":{"path":"/part-1/6-docker-hub","title":"Utilizing tools from the Registry"}}},{"node":{"id":"620db84d-9937-5055-92a6-5a4a360a5164","frontmatter":{"path":"/part-1/7-summary","title":"Summary"}}},{"node":{"id":"873dca8b-d040-5608-9b96-0a7d98e85974","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"96fc03c4-03c2-5fe0-b8cc-adcb4ec70c5d","frontmatter":{"path":"/part-2/1-migrating-to-docker-compose","title":"Migrating to docker compose"}}},{"node":{"id":"f6a251cc-98b5-51da-bfd9-3e9292d0a2e0","frontmatter":{"path":"/part-2/2-docker-networking","title":"Docker networking"}}},{"node":{"id":"6b09524a-3300-5cbe-81f2-2d17c9b6db41","frontmatter":{"path":"/part-2/3-volumes-in-action","title":"Volumes in action"}}},{"node":{"id":"e540cf5b-56e1-580f-8f88-31edacafe428","frontmatter":{"path":"/part-2/4-containers-in-development","title":"Containers in development"}}},{"node":{"id":"a1b889d8-4208-5ab3-a0f1-e60c1b22f098","frontmatter":{"path":"/part-2/5-summary","title":"Summary"}}},{"node":{"id":"d2278081-cb52-560f-9ad9-d390682cdc8c","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"e6eabd79-e91b-55ea-9749-864921da8204","frontmatter":{"path":"/part-3/1-deeper-understainding-of-containers","title":"Deeper understanding of containers"}}},{"node":{"id":"5e6a2ffe-7091-51a3-982f-4b77fa47caa1","frontmatter":{"path":"/part-3/2-deployment-pipelines","title":"Deployment pipelines"}}},{"node":{"id":"1c515bb2-daed-5445-bc9b-f08746fa1151","frontmatter":{"path":"/part-1/1-getting-started","title":"Definitions and basic concepts"}}},{"node":{"id":"c29c1489-bbec-5198-9797-a57896ccc1c5","frontmatter":{"path":"/part-3/6-end","title":"End"}}},{"node":{"id":"4c1acb10-bd08-52a2-bbb7-3bf3dd578525","frontmatter":{"path":"/part-3/3-using-non-root-user","title":"Using a non-root user"}}},{"node":{"id":"a2bdf824-5e5e-57da-94a7-395e8bc5ad26","frontmatter":{"path":"/part-3/5-multi-host-environments","title":"Multi-host environments"}}},{"node":{"id":"1f373fc5-9117-5346-ac21-48fceadc9b95","frontmatter":{"path":"/part-3/4-optimizing-the-image-size","title":"Optimizing the image size"}}}]}},"pageContext":{}},"staticQueryHashes":["3294351120","994120085"]}